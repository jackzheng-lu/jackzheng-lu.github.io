<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>github 博客搭建</title>
    <url>/2021/03/03/%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/github-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="无法成功更新git-page-（push-到git上"><a href="#无法成功更新git-page-（push-到git上" class="headerlink" title="无法成功更新git page （push 到git上)"></a>无法成功更新git page （push 到git上)</h1><p>有可能是github 网址的setting 中的source 没有选择对的branch，电脑上的更新对应的是master branch，</p>
<p>批量修改分类</p>
<p><a href="https://www.dazhuanlan.com/2019/10/05/5d978431edbfe/">https://www.dazhuanlan.com/2019/10/05/5d978431edbfe/</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo_学习</title>
    <url>/2021/03/09/%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/hexo-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>更为详细的教程见<a href="https://hexo.io/zh-cn/docs/">Hexo官网教程</a></p>
<p>Hexo 主题的修改</p>
<p>hexo 主页显示出tags和categories</p>
<p>在主题的<em>_config</em>文件中修改</p>
<p><a href="https://blog.csdn.net/Wonz5130/article/details/84666519">https://blog.csdn.net/Wonz5130/article/details/84666519</a></p>
<p>分类和标签的写法，一共有两种</p>
<p>分类具有层次性和顺序性，标签没有</p>
<blockquote>
<p>注意空格，如果没有空格，则不能正确显示。 </p>
<p>如果标签tags后面没有空格，即使categories后面填写正确，也不能正确显示（目测编码有顺序性）。</p>
</blockquote>
<p>模板的修改，scaffolds</p>
<p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>
<p>NEXT 主题，</p>
<p>有很多插件和布局的修改，在<em>next</em>文件夹下面的<em>_config</em>文件中修改，非常方便</p>
<p>Hexo常用的几个操作</p>
<ul>
<li><p>hexo clean, 清空博客内容（一般操作之后进行）</p>
</li>
<li><p>hexo g，生成博客</p>
</li>
<li><p>hexo s，打开静态博客</p>
</li>
<li><p>hexo debug，可以看出问题所在</p>
</li>
</ul>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客经验</tag>
      </tags>
  </entry>
  <entry>
    <title>博客学习记录（log）</title>
    <url>/2021/03/10/%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88log%EF%BC%89/</url>
    <content><![CDATA[<blockquote>
<p>进行多方搜索，发现我的基本操作没有错误，主要是我拼写错误问题。</p>
<p>这里记录如何在主题下添加各个菜单项</p>
</blockquote>
<p><a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93644533">Hexo博客NexT主题下添加分类、标签、关于菜单项</a></p>
<p>hexo d 后显示登入界面，由于网速的问题，可能会造成无法成功传输？<a href="https://www.itread01.com/content/1541968100.html">https://www.itread01.com/content/1541968100.html</a></p>
<p>解决方法： https://後加 (Github)<strong>使用者名稱:密碼@</strong> 即可</p>
<p>hexo d 后成功update git pages，但是有可能造成DNS污染(??)，无法登入github网址，需要重新清除缓存</p>
<p><a href="https://cloud.tencent.com/developer/article/1600295">写作与图片处理经验</a></p>
<h1 id="图片无法显示问题"><a href="#图片无法显示问题" class="headerlink" title="图片无法显示问题"></a>图片无法显示问题</h1><blockquote>
<p>尝试了多种方法，并不能有效的解决博客图片显示的问题。</p>
<p>方法1：使用相对路径引用资源</p>
</blockquote>
<h2 id="方法1：-对于使用相对路径引用资源的，我们可以使用-Hexo-提供的资源文件夹功能。"><a href="#方法1：-对于使用相对路径引用资源的，我们可以使用-Hexo-提供的资源文件夹功能。" class="headerlink" title="方法1： 对于使用相对路径引用资源的，我们可以使用 Hexo 提供的资源文件夹功能。"></a>方法1： 对于使用相对路径引用资源的，我们可以使用 Hexo 提供的<strong>资源文件夹</strong>功能。</h2><p>使用文本编辑器打开站点根目录下的 <code>_ config.yml</code> 文件，将 <code>post_asset_folder</code> 值设置为 <code>true</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>修改之后会开启 Hexo 的文章资源文件管理功能。Hexo 将会在我们每一次通过 <code>hexo new &lt;title&gt;</code> 命令创建新文章时自动创建一个同名文件夹，于是我们便可以将文章所引用的相关资源放到这个同名文件夹下，然后通过相对路径引用。例如，你把一个 <code>example.jpg</code> 图片放在了这个同名文件夹中，使用相对路径的常规 markdown 语法 <code>&#123;% asset_img example.jpg  %&#125;</code>即可访问 。</p>
<blockquote>
<p>该种方法并不能解决我的问题。</p>
</blockquote>
<h2 id="方法2：typora-自动生成图片文件夹"><a href="#方法2：typora-自动生成图片文件夹" class="headerlink" title="方法2：typora 自动生成图片文件夹"></a>方法2：typora 自动生成图片文件夹</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly94am03bDIuY29kaW5nLXBhZ2VzLmNvbS9ibG9naW1hZ2VzL0hleG8lRTUlOEQlOUElRTUlQUUlQTIlRTUlOUIlQkUlRTUlQkElOEElRTYlOTAlQUQlRTUlQkIlQkElRTQlQjglOEUlRTUlOUIlQkUlRTclODklODclRTclQUUlQTElRTclOTAlODYuYXNzZXRzL2ltYWdlLTIwMjAwNzA3MjAwNjU2ODU2LnBuZw?x-oss-process=image/format,png" alt="img"></p>
<h2 id="方法3：使用一些免费的CDN-服务"><a href="#方法3：使用一些免费的CDN-服务" class="headerlink" title="方法3：使用一些免费的CDN 服务"></a>方法3：使用一些免费的CDN 服务</h2><p>先解释一下什么是 CDN 服务。</p>
<p>CDN 全名是 Content Delivery Network，即内容分发网络。由于国内特殊的网络环境，许多把博客部署到 GitHub Pages 的同学都觉得访问速度太慢，尤其是有大量图片、大体积 CSS、JS 文件时。CDN 服务通过在全世界各个角落部署服务器来缓解这个问题，这些服务把来自源站（这里是 GitHub）的文件缓存在自己的各台服务器上，当有用户访问时则就近选择一台服务器返回结果，如此一来便能大大提高访问速度。</p>
<p>jsDelivr 是众多的公共 CDN 服务商中的一家，长久以来通过稳定优质的服务赢得了不少口碑。尤其值得一体的是，据它官网上的说法：</p>
<blockquote>
<p>jsDelivr is the only public CDN with a valid ICP license issued by the Chinese government, and hundreds of locations directly in Mainland China.</p>
</blockquote>
<p>它的速度在中国相当不错。而且还有一个重要特性：支持加速来自 GitHub 仓库的文件！只要构造一个类似这样的 URL：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;&lt;用户名&gt;&#x2F;&lt;仓库名&gt;@&lt;分支名&gt;&#x2F;&lt;文件路径&gt;</span><br></pre></td></tr></table></figure>

<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;AlanDecode&#x2F;site-Blog@gh-pages&#x2F;favicon.ico</span><br></pre></td></tr></table></figure>

<p>就能直接访问对应文件。这一点可以被我们加以利用，用以加速博客上的 CSS、JS、图片等静态文件。</p>
<p>Maverick 自带了这个功能。回到仓库首页，点击 conf.py 文件，然后点击编辑按钮。修改 <code>enable_jsdelivr</code> 如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">enable_jsdelivr &#x3D; &#123;</span><br><span class="line">    &quot;enabled&quot;: True,</span><br><span class="line">    &quot;repo&quot;: &quot;&lt;你的用户名&gt;&#x2F;Blog-With-GitHub-Boilerplate@gh-pages&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>点击 Commit changes。然后修改你刚才添加的文章，在里面插入一张仓库中的图片：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这是我的第一篇文章。文章使用 GitHub 管理，并通过 GitHub Actions 自动构建与发布！</span><br><span class="line"></span><br><span class="line">![幽灵公主剧照](.&#x2F;images&#x2F;Mononoke_Hime.jpg)</span><br></pre></td></tr></table></figure>

<p>发布后稍等片刻再访问你的网站，此时网站的图片都通过 jsDelivr 传输的。不信的话在图片上右键选择「在新标签页中打开图片」，看链接是否以 <code>cdn.jsdelivr.net</code> 开头。</p>
<p>要插入你自己的图片，请把图片上传到 <code>src/images</code> 文件夹里，然后在文章中使用 Markdown 语法引用即可。</p>
<p>除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。</p>
<p>比如<a href="(https://cloudinary.com/)">Cloudinary</a>提供的图片CDN服务，在Cloudinary中上传图片后，会生成对应的url地址，将地址直接拿来引用即可。或者上传到<a href="https://link.zhihu.com/?target=https://imgchr.com/">路过图床</a>（不用梯子）。</p>
<blockquote>
<p> [cloudinary] (25G的免费空间)</p>
</blockquote>
<p><a href="https://res.cloudinary.com/dd2naemq0/image/upload/v1615794568/1_kipkmy.png">https://res.cloudinary.com/dd2naemq0/image/upload/v1615794568/1_kipkmy.png</a></p>
<p>！[1(<a href="https://res.cloudinary.com/dd2naemq0/image/upload/v1615794568/2021/1_kipkmy.png">https://res.cloudinary.com/dd2naemq0/image/upload/v1615794568/2021/1_kipkmy.png</a>)</p>




<p>如何将</p>
<p><a href="https://blog.csdn.net/weixin_38821611/article/details/107189979">https://blog.csdn.net/weixin_38821611/article/details/107189979</a></p>
<h1 id="如何在Hexo中对文章md文件分类"><a href="#如何在Hexo中对文章md文件分类" class="headerlink" title="如何在Hexo中对文章md文件分类"></a>如何在Hexo中对文章md文件分类</h1><p><a href="https://blog.csdn.net/maosidiaoxian/article/details/85220394">https://blog.csdn.net/maosidiaoxian/article/details/85220394</a></p>
<blockquote>
<p>该博客是2018年的，文中说的<code>permalink</code> 和 <code>new_post_name</code>的title不对应问题，会导致生成的html地址变更，但是<strong>貌似在最新Hexo版本中已经得到解决</strong>。</p>
<p>直接将<code>new_post_name</code>修改为想要的结果即可</p>
</blockquote>
<blockquote>
<p>这里，根据时间和分类对文章的md文件进行分类，时间是默认的为年份分类，年份文件夹下，为每个分类的文件夹。</p>
</blockquote>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客blog</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客学习</title>
    <url>/2021/02/24/%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/hexo%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>学习如何使用Hexo搭建个人的静态博客，目录以及链接等，使用的是Typora编辑器，后期还会将博客push到github上</p>
<h1 id="Hexo以及Markdown编辑器Typora"><a href="#Hexo以及Markdown编辑器Typora" class="headerlink" title="Hexo以及Markdown编辑器Typora"></a>Hexo以及Markdown编辑器Typora</h1><p>Hexo是使用md(Markdown)的方式，针对于Markdown的编辑器，这里使用Typora，其他的可以看推荐 <a href="https://www.v1tx.com/post/best-markdown-editor/">6款好用的Markdown编辑器推荐</a></p>
<h2 id="Hexo-的介绍"><a href="#Hexo-的介绍" class="headerlink" title="Hexo 的介绍"></a>Hexo 的介绍</h2><p>具体看<a href="https://hexo.io/zh-cn/docs/">Hexo官网</a></p>
<h2 id="Typora-的使用方法"><a href="#Typora-的使用方法" class="headerlink" title="Typora 的使用方法"></a>Typora 的使用方法</h2><p>这是网友总结的<a href="https://www.jianshu.com/p/b30955885e6d">Typora Markdown 手册</a>，非常详细，满足基本需求。另外一个链接，提供了一些</p>
<p>此外，还有<a href="https://daringfireball.net/projects/markdown/syntax">官网的指导手册</a>，为英文界面。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">问题：</span><br><span class="line"><span class="bullet">*</span> 如何建立各个md文件之间的联系？或者说资源的引用</span><br><span class="line">应该使用链接的方式：内链和外链（ctrl+click)。内部跳转的方式</span><br><span class="line"><span class="code">	 </span></span><br></pre></td></tr></table></figure>

<p>[Typora常用快捷键] (D:\OneDrive_LU\OneDrive - Lund University\GitHub_blog\MJblog\source_posts\Typora常用快捷键.md)</p>
<blockquote>
</blockquote>
<h2 id="一些常用的操作以及可能场景"><a href="#一些常用的操作以及可能场景" class="headerlink" title="一些常用的操作以及可能场景"></a>一些常用的操作以及可能场景</h2><p>[Typora常用快捷键](D:\OneDrive_LU\OneDrive - Lund University\GitHub_blog\MJblog\source_posts\Typora常用快捷键.md)</p>
<p>注意这类相对link的操作，并不能在hexo的网址上表现出来</p>
<p>A <a href="#this-is-a-title">link</a> to jump towards target header</p>
<p>还未解决的几个问题</p>
<ul>
<li>有些在Typora上的操作，并不能很好的显示在Hexo的网址上（e.g., 目录页，md的跳转以及图片等）</li>
</ul>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>markdown</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2021/03/03/Linux%E5%AD%A6%E4%B9%A0/Linux%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>Linux</p>
<p>写在前面</p>
<p>作为博客的第一篇，我写写整个博客搭建的过程，主要使用Github+HEXO的结合。网络上已经又非常多的教程。由于我的搭建过程参考了众多教程，因此我这里做一个记录，以便之后的快速回顾。引用的教程也附上了链接。每个人的搭建都有自己的独特性。</p>
<p>没有特殊说明，主要来源于这篇博客：<a href="https://zhuanlan.zhihu.com/p/26625249">https://zhuanlan.zhihu.com/p/26625249</a></p>
<p>Anaconda cmd 中可以直接下载安装，但是在git bash中无法找到。google之后应该是环境变量的问题，我这里决定重新上网下载安装包安装（避免之后无法clone 博客到git page中去）</p>
<blockquote>
<p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。这里我们选用的是GitHub，你没看错，全球最大的同性恋交友网站（逃……）。Hexo同时也是GitHub上的开源项目，参见：<a href="https://link.zhihu.com/?target=https://github.com/hexojs/hexo">hexojs/hexo</a> 如果想要更加全面的了解Hexo，可以到其官网 <a href="https://link.zhihu.com/?target=https://hexo.io/">Hexo</a> 了解更多的细节，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。这里，默认各位猿/媛儿都知道GitHub就不再赘述。</p>
</blockquote>
<p><strong>安装Node.js</strong> </p>
<p>Hexo基于Node.js，Node.js下载地址：<a href="https://link.zhihu.com/?target=https://nodejs.org/en/download/">Download | Node.js</a> 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 node -v :</p>
<p><img src="https://pic1.zhimg.com/80/v2-76ea38e9545e606f975781e47933b010_720w.jpg" alt="img"></p>
<p>检测npm是否安装成功，在命令行中输入npm -v :</p>
<p><img src="https://pic2.zhimg.com/80/v2-bede250b8456df92475b455fda8c1dd9_720w.jpg" alt="img"></p>
<p>到这了，安装Hexo的环境已经全部搭建完成。</p>
<p><strong>安装Hexo</strong></p>
<blockquote>
<p>Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击命令行</p>
<p><img src="https://pic1.zhimg.com/80/v2-a5450a466c0927c25dff8ad6f1d2046c_720w.jpg" alt="img"></p>
<p>使用npm命令安装Hexo，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure>



<p>这个安装时间较长耐心等待，安装完成后，初始化我们的博客，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>

<p>注意，这里的命令都是作用在刚刚创建的Blog文件夹中。</p>
<p>为了检测我们的网站雏形，分别按顺序输入以下三条命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new test_my_site</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>这些命令在后面作介绍，完成后，打开浏览器输入地址：</p>
<p>localhost:4000</p>
<p>可以看出我们写出第一篇博客，只不过我下图是我修改过的配置，和你的显示不一样。</p>
<p><img src="https://pic4.zhimg.com/80/v2-123e73c0630d299b1c856d99b04b55bb_720w.jpg" alt="img"></p>
<p>现在来介绍常用的Hexo 命令</p>
<p>npm install hexo -g #安装Hexo<br>npm update hexo -g #升级<br>hexo init #初始化博客</p>
<p>命令简写<br>hexo n “我的博客” == hexo new “我的博客” #新建文章<br>hexo g == hexo generate #生成<br>hexo s == hexo server #启动服务预览<br>hexo d == hexo deploy #部署</p>
<p>hexo server #Hexo会监视文件变动并自动更新，无须重启服务器<br>hexo server -s #静态模式<br>hexo server -p 5000 #更改端口<br>hexo server -i 192.168.1.1 #自定义 IP<br>hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</p>
<p>刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。</p>
<p><strong>推送网站</strong></p>
<p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为<strong>站点</strong>配置文件，如下图</p>
<p><img src="https://pic2.zhimg.com/80/v2-cb1fd5e5a2e73f513234e434724c7c55_720w.jpg" alt="img"></p>
<p>进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为<strong>主题</strong>配置文件，如下图</p>
<p><img src="https://pic4.zhimg.com/80/v2-4252029e5634bf91c7d58916ae2b8ac3_720w.jpg" alt="img"></p>
<p>下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：</p>
<p>deploy:<br>type: git<br>repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git<br>branch: master参考如下：</p>
<p><img src="https://pic1.zhimg.com/80/v2-279ac5149b577f04dc099defbb12eaa8_720w.jpg" alt="img"></p>
<p>保存站点配置文件。</p>
<p>其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>



<p>这时，我们分别输入三条命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href="https://link.zhihu.com/?target=http://xxxx.github.io">http://xxxx.github.io</a> (知乎排版可能会出现”http://“字样，参考下图) 比如我的xxxx就是我的GitHub用户名：</p>
<p><img src="https://pic1.zhimg.com/80/v2-d750452f4258bf0967d5629ef23d1b10_720w.jpg" alt="img"></p>
<p>你就会发现你的博客已经上线了，可以在网络上被访问了。</p>
<p><strong>绑定域名</strong></p>
<p>虽然在Internet上可以访问我们的网站，但是网址是GitHub提供的:<a href="https://link.zhihu.com/?target=http://xxxx.github.io">http://xxxx.github.io</a> (知乎排版可能会出现”http://“字样) 而我们想使用我们自己的个性化域名，这就需要绑定我们自己的域名。这里演示的是在阿里云万网的域名绑定，在国内主流的域名代理厂商也就阿里云和腾讯云。登录到阿里云，进入管理控制台的域名列表，找到你的个性化域名，进入解析</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Shell教程1</title>
    <url>/2021/03/15/Linux%E5%AD%A6%E4%B9%A0/Shell%E6%95%99%E7%A8%8B1/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>linux学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Switch破解记录</title>
    <url>/2021/02/24/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/Switch%E7%A0%B4%E8%A7%A3%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>破解版switch区别（目前switch全版本可破）：</p>
<ul>
<li>tx软破：需要购买激活码和注入器（某宝有），破解完后为sxos系统</li>
<li>txpro软破：需要购买激活码和注入器（pro指配带了激活码的注入器），破解完后为sxos系统</li>
<li>大气层软破：系统免费，安装包和安装教程可以百度下哈设的游戏论坛</li>
<li>芯片硬破：需要焊接芯片，芯片自带sxos系统的激活码，不需要注入</li>
</ul>
<blockquote>
<p>2018年6月之后的机器不可以软破，因为老任已经将该漏洞填补了</p>
</blockquote>
]]></content>
      <categories>
        <category>生活记录</category>
      </categories>
      <tags>
        <tag>switch</tag>
      </tags>
  </entry>
  <entry>
    <title>无法成功打开github及个人gitpage博客的解决方法</title>
    <url>/2021/03/15/%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/%E6%97%A0%E6%B3%95%E6%88%90%E5%8A%9F%E6%89%93%E5%BC%80github%E7%BD%91%E5%9D%80%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>该方案可以适用于所有访问不通的网站</p>
</blockquote>
<h1 id="无法成功打开github-网址的解决方法"><a href="#无法成功打开github-网址的解决方法" class="headerlink" title="无法成功打开github 网址的解决方法"></a>无法成功打开github 网址的解决方法</h1><p>配置了一台新电脑,输入github地址 一直在加载无法打开，确认了不是自己的网络差 解决办法：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">windows下路径为：C:\Windows\System32\drivers\etc\hosts</span><br><span class="line">Linux下路径：/etc/hosts</span><br></pre></td></tr></table></figure>

<ol>
<li>修改hosts文件，如果显示需要权限就把文件拉到桌面再拉回来即可</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">#github</span><br><span class="line"><span class="number">192.30</span><span class="number">.253</span><span class="number">.113</span> github.com</span><br><span class="line"><span class="number">192.30</span><span class="number">.253</span><span class="number">.113</span> github.com</span><br><span class="line"><span class="number">192.30</span><span class="number">.253</span><span class="number">.118</span> gist.github.com</span><br><span class="line"><span class="number">192.30</span><span class="number">.253</span><span class="number">.119</span> gist.github.com</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>如果还是不行 那就需要清除DNS缓存</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">windos: ipconfig /flushdns</span><br><span class="line">ios: sudo killall -HUP mDNSResponder</span><br></pre></td></tr></table></figure>



<h1 id="无法成功打开github-博客的解决方法"><a href="#无法成功打开github-博客的解决方法" class="headerlink" title="无法成功打开github 博客的解决方法"></a>无法成功打开github 博客的解决方法</h1><p><a href="http://tool.chinaz.com/dns">查询</a>自己的博客ip：如</p>




]]></content>
      <categories>
        <category>博客学习</category>
      </categories>
  </entry>
</search>
